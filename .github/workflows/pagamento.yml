 name: Build and Deploy MicroserviÃ§o de Pagamento

 # on:
 #   pull_request:
 #      branches: [main]

 on:
  workflow_dispatch:
    inputs:
      dir:
        description: 'Directory with resources to make deploy'
        required: true
        default: 'tech-challenge-microservico-pagamento'
      
 jobs:
   environment:
    runs-on: ubuntu-latest
    name: Configuration Environment Variable
    steps:     
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Download Environment Variable
        run: |
          aws s3 cp s3://${{ secrets.AWS_BUCKET }}/${{ secrets.AWS_S3_BUCKET_SOURCE_DB }} rds_endpoint.txt
          # cat download.txt > rds_endpoint.txt
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}    

      - name: Upload RDS Endpoint
        uses: actions/upload-artifact@v2
        with:
          name: rds-endpoint
          path: rds_endpoint.txt     
         
   build-pagamento:
     runs-on: ubuntu-latest
     needs: [environment]
     name: Build the application
     steps:      
       - name: Checkout Code
         uses: actions/checkout@v3

       - name: Setup Java
         uses: actions/setup-java@v3
         with:
           distribution: 'temurin'
           java-version: '17'  
             
       - name: Download RDS Endpoint artifact
         uses: actions/download-artifact@v2
         with:
           name: rds-endpoint
           path: .

       - name: Set RDS Endpoint as environment variable
         run: |
           RDS_ENDPOINT=$(cat rds_endpoint.txt)
           echo "RDS_ENDPOINT=$RDS_ENDPOINT" >> $GITHUB_ENV

       - name: Build Project
         run: |
           cd $GITHUB_WORKSPACE/tech-challenge-microservico-pagamento
           mvn clean install -DskipTests

       - name: Login Docker Hub
         run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}  
        
       - name: Build Docker Image
         run: |
           cd $GITHUB_WORKSPACE/tech-challenge-microservico-pagamento
           docker build --build-arg DB_ENDPOINT=$RDS_ENDPOINT --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} --build-arg AWS_REGION=${{ secrets.AWS_DEFAULT_REGION }} -t ${{ secrets.DOCKER_PAGAMENTO_IMAGE }} .

       - name: Push Image Docker
         run: |
           cd $GITHUB_WORKSPACE/tech-challenge-microservico-pagamento
           docker push ${{ secrets.DOCKER_PAGAMENTO_IMAGE }}

    
