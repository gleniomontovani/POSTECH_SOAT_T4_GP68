apiVersion: apps/v1
kind: Deployment
metadata:
  name: tech-challenge-microservico-pedido
  labels:
    app: tech-challenge-microservico-pedido
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tech-challenge-microservico-pedido
  template:
    metadata:
      labels:
        app: tech-challenge-microservico-pedido
    spec:
      containers:
        - name: tech-challenge-microservico-pedido
          image: gleniomontovani/tech-challenge-microservico-pedido:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
          env:
            - name: DATASOURCE_URL
              value: jdbc:postgresql://${DB_ENDPOINT}/pedidos
            - name: DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  key: postgresql-username  
                  name: tech-challenge-microservico-pedido-secret
            - name: DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: tech-challenge-microservico-pedido-secret
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  key: mongo-root-username
                  name: tech-challenge-microservico-pedido-secret
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongo-root-password      
                  name: tech-challenge-microservico-pedido-secret
            - name: AWS_ACCESS_KEY
              value: ${AWS_ACCESS_KEY_ID}    
            - name: AWS_SECRET_ACCESS
              value: ${AWS_SECRET_ACCESS_KEY}
            - name: REGION_AWS
              value: ${AWS_REGION}               
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "500m"
      restartPolicy: Always
      imagePullSecrets:
        - name: dockerhub-secret
                        